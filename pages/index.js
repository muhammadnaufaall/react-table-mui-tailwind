import {
  DataGrid,
  GridToolbarContainer,
  GridToolbarExport,
  csvOptions,
} from "@mui/x-data-grid";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";

export async function getStaticProps() {
  const res = await fetch("https://jsonplaceholder.typicode.com/comments");
  const data = await res.json();
  return {
    props: {
      commentList: data,
    },
  };
}

export default function Home(commentList) {
  useEffect(() => {
    console.log(comments);
  }, []);

  const router = useRouter();

  const [comments, setComments] = useState(commentList.commentList);
  const [searchTitle, setSearchTitle] = useState("");

  const columns = [
    {
      field: "id",
      headerName: "No",
      width: 70,
      renderCell: (params) => {
        return <div className='f mx-auto'>{params.row.id}</div>;
      },
    },
    { field: "name", headerName: "Name", width: 300 },
    {
      field: "email",
      headerName: "Email",
      width: 250,
    },
    {
      field: "body",
      headerName: "Body",
      width: 400,
    },
    {
      field: "action",
      headerName: "Action",
      width: 300,
      renderCell: (params) => {
        return (
          <div className='flex gap-2 justify-center items-center mx-auto'>
            <Link
              href={"/detail/" + params.row.id}
              className='border border-green-500 hover:bg-green-700 text-green-500 hover:text-white hover:border-none font-bold py-2 px-4 rounded'>
              View
            </Link>
            <Link
              href={"/edit/" + params.row.id}
              className='border border-blue-500 hover:bg-blue-700 text-blue-500 hover:text-white hover:border-none font-bold py-2 px-4 rounded'>
              Edit
            </Link>
            <button className='border border-red-500 hover:bg-red-700 text-red-500 hover:text-white hover:border-none font-bold py-2 px-4 rounded'>
              Delete
            </button>
          </div>
        );
      },
    },
  ];

  const handleExport = () => {
    return (
      <div className='flex justify-end items-center pr-5 gap-3 pt-5'>
        <div>
          <Link
            className='border border-blue-500 hover:bg-blue-700 text-blue-500 hover:text-white hover:border-none font-bold py-2 px-4 rounded'
            href={"create/"}>
            Tambah Komentar
          </Link>
        </div>
        <GridToolbarContainer className='border-blue-600 px-2 py-1 border rounded text-white'>
          <GridToolbarExport />
        </GridToolbarContainer>
      </div>
    );
  };

  const rows = comments;

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
        <link
          rel='stylesheet'
          href='https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap'
        />
      </Head>
      <div>
        <h1>Data Table Comments</h1>
      </div>
      <div className='h-screen p-10'>
        <div>
          <input
            placeholder='Search Name'
            className=' border w-1/3 mb-4 p-2 rounded-full border-gray-300'
            type='text'
            defaultValue={searchTitle}
            onChange={(e) => setSearchTitle(e.target.value)}
          />
        </div>
        <DataGrid
          rows={rows.filter((item) => {
            if (searchTitle === "") {
              return item;
            } else if (
              item.name.toLowerCase().includes(searchTitle.toLowerCase())
            ) {
              return item;
            }
          })}
          columns={columns}
          pageSize={10}
          rowsPerPageOptions={[10]}
          components={{ Toolbar: handleExport }}
        />
      </div>
    </>
  );
}
